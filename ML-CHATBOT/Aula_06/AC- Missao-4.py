import numpy as np #isso server para importar a biblioteca numpy que √© usada para fazer opera√ß√µes matem√°ticas
#sem essa biblioteca o python n√£o reconhece o np.random.choice e o np.clip
import time #Isso deixa a simula√ß√£o mais realista/leg√≠vel, porque voc√™ consegue acompanhar o agente andando passo a passo, em vez de rodar tudo de uma vez no terminal.

# Exerc√≠cio 4: O Ch√£o de Lava
print("\n--- Exerc√≠cio 4: O Ch√£o de Lava ---")
posicao_agente = 0#posi√ß√£o inicial do agente
objetivo = 9#posi√ß√£o do objetivo
# posi√ß√µes do ch√£o de lava
# o agente perde mais pontos se pisar nessas posi√ß√µes
chao_de_lava = [3, 4, 5]
recompensa_total = 0

for passo in range(20):#m√°ximo de 20 passos que o agente pode dar
    acao = np.random.choice(['esquerda', 'direita'])#escolhe uma a√ß√£o aleat√≥ria entre esquerda e direita
    print(f"Passo {passo + 1}: Posi√ß√£o={posicao_agente}, A√ß√£o='{acao}'")

    # aqui se a a√ßao escolhida for direira a posi√ß√£o do agente aumenta 1 se for esquerda diminui 1
    # o np.clip serve para limitar a posi√ß√£o do agente entre 0 e 9 n√£o deixando ele sair do ambiente
    if acao == 'direita':
        posicao_agente += 1
    else:
        posicao_agente -= 1
    posicao_agente = np.clip(posicao_agente, 0, 9)


#aqui √© usado if e else para atribuir valores para a a ariavel recompensa_passo(pontua√ß√£o atual)
#ou seja se o agente pisar no ch√£o de lava ele perde 5 pontos
#se ele pisar no ch√£o normal ele perde 1 ponto
#se o agente chegar no objetivo ele ganha 50 pontos
    # TODO 1: Chegou no objetivo?
    if posicao_agente == objetivo:
        recompensa_total += 50
        print("üéØ Objetivo alcan√ßado! +50 pontos")
        break

    # TODO 2: Recompensa do passo
    if posicao_agente in chao_de_lava:
        recompensa_passo = -5
        print("üî• Ch√£o de lava! -5 pontos")
    else:
        recompensa_passo = -1
        print("üü© Ch√£o normal -1 ponto")

    # TODO 3: Soma recompensa
    recompensa_total += recompensa_passo#atualiza a pontua√ß√£o total do agente

    time.sleep(0.5)#com o sleep √© poss√≠vel ver o agente andando passo a passo sem ele a simula√ß√£o roda tudo de uma vez no terminal

print(f"Simula√ß√£o finalizada! Posi√ß√£o final: {posicao_agente}, Recompensa: {recompensa_total}")
